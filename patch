#!/bin/sh
# Patch the input java class file with Preverifier
# Use -r to restore the class file's backup
# Use -e to execute the program before and after patching
# Use -c to specify the folder the class file is in
# Ex: ./patch -r -e -c tests helloworldjsr
CLASSPATH=$(pwd)
while getopts "erc:" flag; do
	case ${flag} in
		r) 
		  RESTORE=true;;
		e)
		  EXEC=true;;
		c)
		  CLASSPATH=${OPTARG};;
	esac
done
shift $((OPTIND-1))
FILE=$1
cd $CLASSPATH

if [[ -f "$FILE".class ]]; then
	echo Found "$FILE"
else
	echo "$FILE" not found
	exit
fi

if [[ $RESTORE == true ]] ; then
	# Restore class file from backup
	echo Restoring $FILE...
	if [[ -f "$FILE"_backup.class ]]
	then
		rm "$FILE".class
		mv "$FILE"_backup.class "$FILE".class
	else
		echo "$FILE" backup not found
	fi
fi

if [[ -f "$FILE"_backup.class ]]
then
	while true; do
		read -e -p ""$FILE"_backup already exists, will you overwrite this backup? (y/n)" yn
		case $yn in
			y)	cp "$FILE".class $1_backup.class;
				echo "$FILE"_backup.class overwritten;break;;
			n) echo Backup unchanged;break;;
			*) echo "Please respond with y or n";;
		esac
	done
else 
	cp "$FILE".class "$FILE"_backup.class;
fi
cd ..
if [[ $EXEC == true ]] ; then
	echo **Original Output**
	java -classpath $CLASSPATH $FILE
fi

if [[ -f /tmp/preverifier/"$FILE".class ]]; then
	rm /tmp/preverifier/"$FILE".class
fi

java --add-modules java.base --add-exports java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED --add-exports java.base/jdk.internal.org.objectweb.asm.util=ALL-UNNAMED --add-exports java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED Preverifier.java $CLASSPATH/$FILE	

if [[ $EXEC == true ]] ; then
	echo **Patched Output**
	java -classpath /tmp/preverifier $FILE
fi