/*
 * Copyright (c) 2021, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

// try finally bytecode
super public class tryfinallyBytecode
	version 50:0
{

public Method "<init>":"()V"
	stack 1 locals 1
{
	aload_0;
	invokespecial Method java/lang/Object."<init>":"()V";
	return;
}

public static varargs Method main:"([Ljava/lang/String;)V"
	stack 5 locals 3
{
		aload_0;             // Beginning of try block
		invokevirtual	Method tryItOut:"()V";    // Method Example.tryItOut()V
		goto L0;             // Jump to finally block
		astore_3;            // Beginning of handler for TestExc;
		                // Store thrown value in local var 3
		aload_0;             // Push this
		aload_3;             // Push thrown value
		invokevirtual	Method handleExc:"(Ljava/lang/Exception;)V";    // Invoke handler method:
		                // Example.handleExc(LTestExc;)V
		goto L0;             // This goto is unnecessary, but was
		                // generated by javac in JDK 1.0.2
	L0:
		jsr L1;              // Call finally block
		return;              // Return after handling TestExc
		astore_1;            // Beginning of handler for exceptions
		                // other than TestExc, or exceptions
		                // thrown while handling TestExc
		jsr L1;              // Call finally block
		aload_1;             // Push thrown value...
		athrow;              // ...and rethrow value to the invoker
	L1:
		astore_2;            // Beginning of finally block
		aload_0;             // Push this
		invokevirtual 	Method wrapItUp:"()V";    // Method Example.wrapItUp()V
		ret 2;               // Return from finally block
}

public static Method tryItOut:"()V"
	stack 0 locals 0
{
		return;
}

public static Method handleExc:"(Ljava/lang/Exception;)V"
	stack 0 locals 1
{
		return;
}

public static Method wrapItUp:"()V"
	stack 0 locals 0
{
		return;
}

} // end Class helloworldjsr